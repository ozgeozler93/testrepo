import glob
import pandas as pd
from datetime import datetime
!wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0221EN-SkillsNetwork/labs/module%206/Lab%20-%20Extract%20Transform%20Load/data/bank_market_cap_1.json
!wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0221EN-SkillsNetwork/labs/module%206/Lab%20-%20Extract%20Transform%20Load/data/bank_market_cap_2.json
!wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0221EN-SkillsNetwork/labs/module%206/Final%20Assignment/exchange_rates.csv

def extract_from_json(file_to_process):
    dataframe = pd.read_json(file_to_process)
    return dataframe
    
columns=['Name','Market Cap (US$ Billion)']


def extract():
    extracted_data = pd.DataFrame(columns=['Name','Market Cap (US$ Billion)']) # create an empty data frame to hold extracted data

    #process all json files
    for jsonfile in glob.glob("*.json"):
        extracted_data = extracted_data.append(extract_from_json(jsonfile), ignore_index=True)
    return extracted_data

# Write your code here
exchange_rates = pd.read_csv('exchange_rates.csv', index_col=0)
exchange_rate=exchange_rates.loc['GBP','Rates']
exchange_rate

def transform(data):
     data['Market Cap (GBP$ Billion)'] = round(data['Market Cap (US$ Billion)'] ,3)
     data.rename(columns={'Market Cap (US$ Billion)':'Market Cap (US$ Billion)'}, inplace=True)
     return data
  
def load(target_file, data_to_load):
    # Write your code here
    data_to_load.to_csv(target_file, index=False)
   
def log(message):
    # Write your code here
        # Write your code here
    timestamp_format = '%Y-%h-%d-%H:%M:%S' # Year-Monthname-Day-Hour-Minute-Second
    now = datetime.now() # get current timestamp
    timestamp = now.strftime(timestamp_format)
    with open("logfile.txt","a") as f:
        f.write(timestamp + ',' + message + '\n')
        
# Write your code here
log("ETL Job Started")
log("Extract phase Started")


# Call the function here
extracted_data = extract()
# Print the rows here
extracted_data=extracted_data.drop(['version_major','version_minor','state'], axis=1)
extracted_data

# Write your code here
log("Extract phase Ended")

# Write your code here
log("Transform phase Started")

extracted_data

# Call the function here
transformed_data = transform(extracted_data)
# Print the first 5 rows here
transformed_data.head()

# Write your code here
log("Transform phase Ended")

# Write your code here
log('Load phase Started')

# Write your code here
load('bank_market_cap_gbp.csv', transformed_data)

# Write your code here
log('Load phase Ended')






